<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ko">
<head>
<meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
<title>Pomodoro test - jsspec</title>
<link rel="stylesheet" type="text/css" href="../css/JSSpec.css" />
<script type="text/javascript" src="/js/diff_match_patch.js"></script>
<script type="text/javascript" src="/js/JSSpec.js"></script>
<script type="text/javascript" src="/js/jquery.js"></script>
<script type="text/javascript" src="/js/pmdr.js"></script>

<script type="text/javascript">// <![CDATA[

describe('Timer', {
  before_all: function(){
    taskManager = new TaskManager();
    taskManager.tasks = new MemoryStorage(taskManager);
    taskManager.addTask('test');
    pomodoroTimer = new PomodoroTimer(taskManager);
  },

  'is stopped as a default': function() {
    value_of(pomodoroTimer.state).should_be('stopped');
  },

  'is running': function() {
    $("#task_list")[0].selectedIndex = 0
    pomodoroTimer.start();
    value_of(pomodoroTimer.timer.state).should_be('running');
  },

  'is stopped after stop': function() {
    pomodoroTimer.start();
    pomodoroTimer.stop(pomodoroTimer);
    value_of(pomodoroTimer.timer.state).should_be('stopped');
  },

  'is stopped after done': function() {
    $("#task_list")[0].selectedIndex = 0
    pomodoroTimer.start();
    pomodoroTimer.done();
    value_of(pomodoroTimer.state).should_be('stopped');
  },

  'timer is set to 0 after done': function() {
    $("#task_list")[0].selectedIndex = 0
    pomodoroTimer.start();
    pomodoroTimer.done();
    value_of(pomodoroTimer.timer.state).should_be('stopped');
  }
  
})

describe('Task', {
  before_each: function(){
    var taskManager = new TaskManager();
    taskManager.tasks = new MemoryStorage(taskManager);

    pomodoroTimer = new PomodoroTimer(taskManager);

    taskManager.addTask('Pomodoro name');
    task = taskManager.tasks.get(0)
  },

  'has "Pomodoro name"': function() {
    value_of(task.name).should_be('Pomodoro name');
  },

  'has 0 interruption as default': function() {
    value_of(task.number_of_interuptions).should_be(0);
  },

  'has 1 interuption': function() {
    $("#task_list")[0].selectedIndex = 0
    pomodoroTimer.start();
    pomodoroTimer.interuption()
    value_of(task.number_of_interuptions).should_be(1);
  },

  'has 3 interuption': function() {
    $("#task_list")[0].selectedIndex = 0
    pomodoroTimer.start();
    pomodoroTimer.interuption()
    pomodoroTimer.interuption()
    pomodoroTimer.interuption()
    value_of(task.number_of_interuptions).should_be(3);
  },

  'has 0 pomodoros as default': function() {
    value_of(task.number_of_pomodoros).should_be(0);
  },

  'has 1 pomodoro': function() {
    $("#task_list")[0].selectedIndex = 0
    pomodoroTimer.start();
    pomodoroTimer.stop(pomodoroTimer)
    value_of(task.number_of_pomodoros).should_be(1);
    pomodoroTimer.start();
    pomodoroTimer.stop(pomodoroTimer)
    value_of(task.number_of_pomodoros).should_be(2);
  },

  'increase 1 pomodoro after done': function() {
    $("#task_list")[0].selectedIndex = 0
    pomodoroTimer.start();
    pomodoroTimer.done();
    value_of(task.number_of_pomodoros).should_be(1);
  },

  'doesn\'t increase 1 pomodoro after done if it is stopped': function() {
    $("#task_list")[0].selectedIndex = 0
    pomodoroTimer.done();
    value_of(task.number_of_pomodoros).should_be(0);
  },

  'has waiting status as default': function() {
    $("#task_list")[0].selectedIndex = 0
    pomodoroTimer.start();
    value_of(task.status).should_be('waiting');
  },

  'has done status': function() {
    $("#task_list")[0].selectedIndex = 0
    pomodoroTimer.start();
    pomodoroTimer.done();
    value_of(task.status).should_be('done');
  }

})
// ]]></script>
</head>
<body>
 <div id="timer_tasks" style="display:none;">
    <select size="5" id="task_list" name="task_list">
    </select>
  </div>
</body>
</html>